version: '3.8'

services:
  # PostgreSQL database
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Run database migrations
  migrations:
    build:
      context: .
      dockerfile: Dockerfile.migrations
    env_file:
      - ./.env
    command: >
      bash -c "
        echo 'Waiting for PostgreSQL to be ready...';
        while ! pg_isready -h db -U postgres -d webhook_service; do sleep 2; done;
        echo 'PostgreSQL is ready!';
        alembic upgrade head
      "
    depends_on:
      db:
        condition: service_healthy

  # Redis for cache and Celery broker
  redis:
    image: redis:6
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  # API service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    env_file:
      - ./.env
    ports:
      - 8000:8000
    depends_on:
      migrations:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.api.main:app --host 0.0.0.0 --port 8000
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Worker service
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file:
      - ./.env
    depends_on:
      migrations:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "celery", "-A", "app.workers.celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Celery beat service
  beat:
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file:
      - ./.env
    command: celery -A app.workers.celery_app beat --loglevel=info
    depends_on:
      migrations:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ["CMD", "celery", "-A", "app.workers.celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # pgAdmin service
  pgadmin:
    image: dpage/pgadmin4
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    env_file:
      - ./.env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 5050:80
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

volumes:
  postgres_data:
  redis_data:
  pgadmin_data: